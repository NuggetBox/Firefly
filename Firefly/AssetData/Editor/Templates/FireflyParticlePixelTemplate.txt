#include <Includes/ParticleStructs.hlsli>
#include <Includes/FireflyShader.hlsli>

//AVAILABLE PARTICLE INFORMATION, ACCESS WITH input.
//struct ParticleGeometryToPixel
//{
//	float4 Position : SV_POSITION;
//	float4 Color : COLOR;
//	float3 Speed : SPEED;
//	float LifeTime : LIFETIME;
//	float2 UV : TEXCOORD;
//};

SamplerState defaultSampler : register(s0);
Texture2D albedoTexture : register(t0);

struct Output
{
    float4 colorResult : SV_Target0;
};

Output main(ParticleGeometryToPixel input)
{
    Output result;
    float4 textureColor = albedoTexture.Sample(defaultSampler, input.UV);

	//Helps avoid extra alpha testing
	if (textureColor.a <= 0.05f)
	{
		result.colorResult.rgba = float4(0, 0, 0, 0);
		discard;
		return result;
	}

	result.colorResult.rgba = textureColor.rgba * input.Color.rgba;

	return result;
}