#include <Includes/VertexCommon.hlsli>
#include <Includes/Math.hlsli>

struct PixelInput
{
    float4 position : SV_POSITION;
    float4 worldPosition : POSITION;
    float3 viewPosition : WORLDPOSITION;
    float4x4 InverseMat : INVMAT;
};


PixelInput main(VertexInput vInput, uint instanceID : SV_InstanceID)
{
    PixelInput pInput;
    
    InstanceData instanceData = FetchInstanceData(instanceID);
    
    float4x4 skinningMatrix = CreateSkinningMatrix(vInput.boneWeights, vInput.boneIds, instanceData, instanceID);
    pInput.worldPosition = TransformPosition(vInput.position, skinningMatrix, instanceData);
    
    pInput.position = ProjectPosition(vInput.position, skinningMatrix, instanceData);

    pInput.viewPosition = mul(toView, pInput.worldPosition).xyz;
    
    pInput.InverseMat = inverse(instanceData.transform);
   
    
    return pInput;
}